"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _chalk = _interopRequireDefault(require("chalk"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
var Logging = /*#__PURE__*/_createClass(function Logging() {
  _classCallCheck(this, Logging);
});
exports["default"] = Logging;
_defineProperty(Logging, "log", function (args) {
  return Logging.info(args);
});
_defineProperty(Logging, "info", function (args) {
  return console.log(_chalk["default"].blue("[".concat(new Date().toLocaleString(), "] [INFO]")), typeof args === 'string' ? _chalk["default"].blueBright(args) : args);
});
_defineProperty(Logging, "warning", function (args) {
  return console.log(_chalk["default"].yellow("[".concat(new Date().toLocaleString(), "] [WARN]")), typeof args === 'string' ? _chalk["default"].yellowBright(args) : args);
});
_defineProperty(Logging, "error", function (args) {
  return console.log(_chalk["default"].red("[".concat(new Date().toLocaleString(), "] [ERROR]")), typeof args === 'string' ? _chalk["default"].redBright(args) : args);
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfY2hhbGsiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIm9iaiIsIl9fZXNNb2R1bGUiLCJfdHlwZW9mIiwiU3ltYm9sIiwiaXRlcmF0b3IiLCJjb25zdHJ1Y3RvciIsInByb3RvdHlwZSIsIl9kZWZpbmVQcm9wZXJ0aWVzIiwidGFyZ2V0IiwicHJvcHMiLCJpIiwibGVuZ3RoIiwiZGVzY3JpcHRvciIsImVudW1lcmFibGUiLCJjb25maWd1cmFibGUiLCJ3cml0YWJsZSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiX3RvUHJvcGVydHlLZXkiLCJrZXkiLCJfY3JlYXRlQ2xhc3MiLCJDb25zdHJ1Y3RvciIsInByb3RvUHJvcHMiLCJzdGF0aWNQcm9wcyIsIl9jbGFzc0NhbGxDaGVjayIsImluc3RhbmNlIiwiVHlwZUVycm9yIiwiX2RlZmluZVByb3BlcnR5IiwidmFsdWUiLCJhcmciLCJfdG9QcmltaXRpdmUiLCJTdHJpbmciLCJpbnB1dCIsImhpbnQiLCJwcmltIiwidG9QcmltaXRpdmUiLCJ1bmRlZmluZWQiLCJyZXMiLCJjYWxsIiwiTnVtYmVyIiwiTG9nZ2luZyIsImV4cG9ydHMiLCJhcmdzIiwiaW5mbyIsImNvbnNvbGUiLCJsb2ciLCJjaGFsayIsImJsdWUiLCJjb25jYXQiLCJEYXRlIiwidG9Mb2NhbGVTdHJpbmciLCJibHVlQnJpZ2h0IiwieWVsbG93IiwieWVsbG93QnJpZ2h0IiwicmVkIiwicmVkQnJpZ2h0Il0sInNvdXJjZXMiOlsiLi4vLi4vc3JjL2xpYnJhcnkvTG9nZ2luZy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY2hhbGsgZnJvbSAnY2hhbGsnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBMb2dnaW5nIHtcbiAgcHVibGljIHN0YXRpYyBsb2cgPSAoYXJnczogYW55KSA9PiB0aGlzLmluZm8oYXJncyk7XG4gIHB1YmxpYyBzdGF0aWMgaW5mbyA9IChhcmdzOiBhbnkpID0+XG4gICAgY29uc29sZS5sb2coXG4gICAgICBjaGFsay5ibHVlKGBbJHtuZXcgRGF0ZSgpLnRvTG9jYWxlU3RyaW5nKCl9XSBbSU5GT11gKSxcbiAgICAgIHR5cGVvZiBhcmdzID09PSAnc3RyaW5nJyA/IGNoYWxrLmJsdWVCcmlnaHQoYXJncykgOiBhcmdzXG4gICAgKTtcbiAgcHVibGljIHN0YXRpYyB3YXJuaW5nID0gKGFyZ3M6IGFueSkgPT5cbiAgICBjb25zb2xlLmxvZyhcbiAgICAgIGNoYWxrLnllbGxvdyhgWyR7bmV3IERhdGUoKS50b0xvY2FsZVN0cmluZygpfV0gW1dBUk5dYCksXG4gICAgICB0eXBlb2YgYXJncyA9PT0gJ3N0cmluZycgPyBjaGFsay55ZWxsb3dCcmlnaHQoYXJncykgOiBhcmdzXG4gICAgKTtcbiAgcHVibGljIHN0YXRpYyBlcnJvciA9IChhcmdzOiBhbnkpID0+XG4gICAgY29uc29sZS5sb2coXG4gICAgICBjaGFsay5yZWQoYFske25ldyBEYXRlKCkudG9Mb2NhbGVTdHJpbmcoKX1dIFtFUlJPUl1gKSxcbiAgICAgIHR5cGVvZiBhcmdzID09PSAnc3RyaW5nJyA/IGNoYWxrLnJlZEJyaWdodChhcmdzKSA6IGFyZ3NcbiAgICApO1xufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxJQUFBQSxNQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFBMEIsU0FBQUQsdUJBQUFFLEdBQUEsV0FBQUEsR0FBQSxJQUFBQSxHQUFBLENBQUFDLFVBQUEsR0FBQUQsR0FBQSxnQkFBQUEsR0FBQTtBQUFBLFNBQUFFLFFBQUFGLEdBQUEsc0NBQUFFLE9BQUEsd0JBQUFDLE1BQUEsdUJBQUFBLE1BQUEsQ0FBQUMsUUFBQSxhQUFBSixHQUFBLGtCQUFBQSxHQUFBLGdCQUFBQSxHQUFBLFdBQUFBLEdBQUEseUJBQUFHLE1BQUEsSUFBQUgsR0FBQSxDQUFBSyxXQUFBLEtBQUFGLE1BQUEsSUFBQUgsR0FBQSxLQUFBRyxNQUFBLENBQUFHLFNBQUEscUJBQUFOLEdBQUEsS0FBQUUsT0FBQSxDQUFBRixHQUFBO0FB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