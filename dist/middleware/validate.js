"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.validateToken = exports.validateSuperAdmin = exports.validateShipper = exports.validateOwner = exports.validateAdmin = void 0;
var _jsonwebtoken = _interopRequireDefault(require("jsonwebtoken"));
var _user = require("../models/user");
var _common = require("../utils/common");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
var validateToken = function validateToken(req, res, next) {
  var _req$header;
  var token = (_req$header = req.header('Authorization')) === null || _req$header === void 0 ? void 0 : _req$header.slice(7); // cut Bearer

  if (!token) return res.status(401).send({
    message: 'error.auth.access_denied'
  });
  try {
    _jsonwebtoken["default"].verify(token, process.env.JWT_KEY || '');
    next();
  } catch (err) {
    return res.status(401).send({
      message: 'error.auth.invalid_token'
    });
  }
};
exports.validateToken = validateToken;
var validateAdmin = function validateAdmin(req, res, next) {
  var role = (0, _common.getRole)(req);
  if ((0, _common.isHasPermission)(role, _user.Role.admin)) {
    next();
  } else {
    return res.status(403).json({
      message: 'error.auth.do_not_have_permission'
    });
  }
};
exports.validateAdmin = validateAdmin;
var validateSuperAdmin = function validateSuperAdmin(req, res, next) {
  var role = (0, _common.getRole)(req);
  if ((0, _common.isHasPermission)(role, _user.Role.super_admin)) {
    next();
  } else {
    return res.status(403).json({
      message: 'error.auth.do_not_have_permission'
    });
  }
};
exports.validateSuperAdmin = validateSuperAdmin;
var validateOwner = function validateOwner(req, res, next) {
  var role = (0, _common.getRole)(req);
  if ((0, _common.isHasPermission)(role, _user.Role.owner)) {
    next();
  } else {
    return res.status(403).json({
      message: 'error.auth.do_not_have_permission'
    });
  }
};
exports.validateOwner = validateOwner;
var validateShipper = function validateShipper(req, res, next) {
  var role = (0, _common.getRole)(req);
  if (role === _user.Role.shipper) {
    next();
  } else {
    return res.status(403).json({
      message: 'error.auth.do_not_have_permission'
    });
  }
};
exports.validateShipper = validateShipper;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfanNvbndlYnRva2VuIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJfdXNlciIsIl9jb21tb24iLCJvYmoiLCJfX2VzTW9kdWxlIiwidmFsaWRhdGVUb2tlbiIsInJlcSIsInJlcyIsIm5leHQiLCJfcmVxJGhlYWRlciIsInRva2VuIiwiaGVhZGVyIiwic2xpY2UiLCJzdGF0dXMiLCJzZW5kIiwibWVzc2FnZSIsImp3dCIsInZlcmlmeSIsInByb2Nlc3MiLCJlbnYiLCJKV1RfS0VZIiwiZXJyIiwiZXhwb3J0cyIsInZhbGlkYXRlQWRtaW4iLCJyb2xlIiwiZ2V0Um9sZSIsImlzSGFzUGVybWlzc2lvbiIsIlJvbGUiLCJhZG1pbiIsImpzb24iLCJ2YWxpZGF0ZVN1cGVyQWRtaW4iLCJzdXBlcl9hZG1pbiIsInZhbGlkYXRlT3duZXIiLCJvd25lciIsInZhbGlkYXRlU2hpcHBlciIsInNoaXBwZXIiXSwic291cmNlcyI6WyIuLi8uLi9zcmMvbWlkZGxld2FyZS92YWxpZGF0ZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZXh0RnVuY3Rpb24sIFJlcXVlc3QsIFJlc3BvbnNlIH0gZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgand0IGZyb20gJ2pzb253ZWJ0b2tlbic7XG5pbXBvcnQgeyBSb2xlIH0gZnJvbSAnc3JjL21vZGVscy91c2VyJztcbmltcG9ydCB7IGdldFJvbGUsIGlzSGFzUGVybWlzc2lvbiB9IGZyb20gJ3NyYy91dGlscy9jb21tb24nO1xuXG5leHBvcnQgY29uc3QgdmFsaWRhdGVUb2tlbiA9IChyZXE6IFJlcXVlc3QsIHJlczogUmVzcG9uc2UsIG5leHQ6IE5leHRGdW5jdGlvbikgPT4ge1xuICBjb25zdCB0b2tlbiA9IHJlcS5oZWFkZXIoJ0F1dGhvcml6YXRpb24nKT8uc2xpY2UoNyk7IC8vIGN1dCBCZWFyZXJcblxuICBpZiAoIXRva2VuKSByZXR1cm4gcmVzLnN0YXR1cyg0MDEpLnNlbmQoeyBtZXNzYWdlOiAnZXJyb3IuYXV0aC5hY2Nlc3NfZGVuaWVkJyB9KTtcblxuICB0cnkge1xuICAgIGp3dC52ZXJpZnkodG9rZW4sIHByb2Nlc3MuZW52LkpXVF9LRVkgfHwgJycpO1xuICAgIG5leHQoKTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAxKS5zZW5kKHsgbWVzc2FnZTogJ2Vycm9yLmF1dGguaW52YWxpZF90b2tlbicgfSk7XG4gIH1cbn07XG5cbmV4cG9ydCBjb25zdCB2YWxpZGF0ZUFkbWluID0gKHJlcTogUmVxdWVzdCwgcmVzOiBSZXNwb25zZSwgbmV4dDogTmV4dEZ1bmN0aW9uKSA9PiB7XG4gIGNvbnN0IHJvbGUgPSBnZXRSb2xlKHJlcSk7XG4gIGlmIChpc0hhc1Blcm1pc3Npb24ocm9sZSwgUm9sZS5hZG1pbikpIHtcbiAgICBuZXh0KCk7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAzKS5qc29uKHsgbWVzc2FnZTogJ2Vycm9yLmF1dGguZG9fbm90X2hhdmVfcGVybWlzc2lvbicgfSk7XG4gIH1cbn07XG5cbmV4cG9ydCBjb25zdCB2YWxpZGF0ZVN1cGVyQWRtaW4gPSAocmVxOiBSZXF1ZXN0LCByZXM6IFJlc3BvbnNlLCBuZXh0OiBOZXh0RnVuY3Rpb24pID0+IHtcbiAgY29uc3Qgcm9sZSA9IGdldFJvbGUocmVxKTtcblxuICBpZiAoaXNIYXNQZXJtaXNzaW9uKHJvbGUsIFJvbGUuc3VwZXJfYWRtaW4pKSB7XG4gICAgbmV4dCgpO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiByZXMuc3RhdHVzKDQwMykuanNvbih7IG1lc3NhZ2U6ICdlcnJvci5hdXRoLmRvX25vdF9oYXZlX3Blcm1pc3Npb24nIH0pO1xuICB9XG59O1xuXG5leHBvcnQgY29uc3QgdmFsaWRhdGVPd25lciA9IChyZXE6IFJlcXVlc3QsIHJlczogUmVzcG9uc2UsIG5leHQ6IE5leHRGdW5jdGlvbikgPT4ge1xuICBjb25zdCByb2xlID0gZ2V0Um9sZShyZXEpO1xuXG4gIGlmIChpc0hhc1Blcm1pc3Npb24ocm9sZSwgUm9sZS5vd25lcikpIHtcbiAgICBuZXh0KCk7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAzKS5qc29uKHsgbWVzc2FnZTogJ2Vycm9yLmF1dGguZG9fbm90X2hhdmVfcGVybWlzc2lvbicgfSk7XG4gIH1cbn07XG5cbmV4cG9ydCBjb25zdCB2YWxpZGF0ZVNoaXBwZXIgPSAocmVxOiBSZXF1ZXN0LCByZXM6IFJlc3BvbnNlLCBuZXh0OiBOZXh0RnVuY3Rpb24pID0+IHtcbiAgY29uc3Qgcm9sZSA9IGdldFJvbGUocmVxKTtcblxuICBpZiAocm9sZSA9PT0gUm9sZS5zaGlwcGVyKSB7XG4gICAgbmV4dCgpO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiByZXMuc3RhdHVzKDQwMykuanNvbih7IG1lc3NhZ2U6ICdlcnJvci5hdXRoLmRvX25vdF9oYXZlX3Blcm1pc3Npb24nIH0pO1xuICB9XG59O1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFDQSxJQUFBQSxhQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyxLQUFBLEdBQUFELE9BQUE7QUFDQSxJQUFBRSxPQUFBLEdBQUFGLE9BQUE7QUFBNEQsU0FBQUQsdUJBQUFJLEdBQUEsV0FBQUEsR0FBQSxJQUFBQSxHQUFBLENBQUFDLFVBQUEsR0FBQUQsR0FBQSxnQkFBQUEsR0FBQTtBQUVyRCxJQUFNRSxhQUFhLEdBQUcsU0FBaEJBLGFBQWFBLENBQUlDLEdBQVksRUFBRUMsR0FBYSxFQUFFQyxJQUFrQixFQUFLO0VBQUEsSUFBQUMsV0FBQTtFQUNoRixJQUFNQyxLQUFLLElBQUFELFdBQUEsR0FBR0gsR0FBRyxDQUFDSyxNQUFNLENBQUMsZUFBZSxDQUFDLGNBQUFGLFdBQUEsdUJBQTNCQSxXQUFBLENBQTZCRyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQzs7RUFFckQsSUFBSSxDQUFDRixLQUFLLEVBQUUsT0FBT0gsR0FBRyxDQUFDTSxNQUFNLENBQUMs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