"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _express = require("express");
var _controller = require("../../controller");
var _Joi = require("../../middleware/Joi");
var _validate = require("../../middleware/validate");
var _validationSchemas = require("../../middleware/validationSchemas");
var router = (0, _express.Router)();
router.get('/current', _controller.templateController.currentTemplate);
router.get('/all', _validate.validateToken, _validate.validateAdmin, _controller.templateController.getAllTemplates);
router.get('/get/:id', _validate.validateToken, _validate.validateAdmin, (0, _Joi.ValidateJoiParam)(_validationSchemas.ParamsSchema.common), _controller.templateController.getTemplate);
router.post('/create', _validate.validateToken, _validate.validateAdmin, (0, _Joi.ValidateJoi)(_validationSchemas.TemplateSchema.create), _controller.templateController.createTemplate);
router.patch('/update/:id', _validate.validateToken, _validate.validateAdmin, (0, _Joi.ValidateJoiParam)(_validationSchemas.ParamsSchema.common), (0, _Joi.ValidateJoi)(_validationSchemas.TemplateSchema.update), _controller.templateController.updateTemplate);
router.post('/active/:id', _validate.validateToken, _validate.validateAdmin, (0, _Joi.ValidateJoiParam)(_validationSchemas.ParamsSchema.common), _controller.templateController.activeTemplate);
router["delete"]('/delete/:id', _validate.validateToken, _validate.validateAdmin, (0, _Joi.ValidateJoiParam)(_validationSchemas.ParamsSchema.common), _controller.templateController.deleteTemplate);
var _default = router;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZXhwcmVzcyIsInJlcXVpcmUiLCJfY29udHJvbGxlciIsIl9Kb2kiLCJfdmFsaWRhdGUiLCJfdmFsaWRhdGlvblNjaGVtYXMiLCJyb3V0ZXIiLCJSb3V0ZXIiLCJnZXQiLCJ0ZW1wbGF0ZUNvbnRyb2xsZXIiLCJjdXJyZW50VGVtcGxhdGUiLCJ2YWxpZGF0ZVRva2VuIiwidmFsaWRhdGVBZG1pbiIsImdldEFsbFRlbXBsYXRlcyIsIlZhbGlkYXRlSm9pUGFyYW0iLCJQYXJhbXNTY2hlbWEiLCJjb21tb24iLCJnZXRUZW1wbGF0ZSIsInBvc3QiLCJWYWxpZGF0ZUpvaSIsIlRlbXBsYXRlU2NoZW1hIiwiY3JlYXRlIiwiY3JlYXRlVGVtcGxhdGUiLCJwYXRjaCIsInVwZGF0ZSIsInVwZGF0ZVRlbXBsYXRlIiwiYWN0aXZlVGVtcGxhdGUiLCJkZWxldGVUZW1wbGF0ZSIsIl9kZWZhdWx0IiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9yb3V0ZXMvdGVtcGxhdGUvaW5kZXgudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUm91dGVyIH0gZnJvbSAnZXhwcmVzcyc7XG5cbmltcG9ydCB7IHRlbXBsYXRlQ29udHJvbGxlciB9IGZyb20gJ3NyYy9jb250cm9sbGVyJztcbmltcG9ydCB7IFZhbGlkYXRlSm9pLCBWYWxpZGF0ZUpvaVBhcmFtIH0gZnJvbSAnc3JjL21pZGRsZXdhcmUvSm9pJztcbmltcG9ydCB7IHZhbGlkYXRlQWRtaW4sIHZhbGlkYXRlVG9rZW4gfSBmcm9tICdzcmMvbWlkZGxld2FyZS92YWxpZGF0ZSc7XG5pbXBvcnQgeyBQYXJhbXNTY2hlbWEsIFRlbXBsYXRlU2NoZW1hIH0gZnJvbSAnc3JjL21pZGRsZXdhcmUvdmFsaWRhdGlvblNjaGVtYXMnO1xuY29uc3Qgcm91dGVyID0gUm91dGVyKCk7XG5cbnJvdXRlci5nZXQoJy9jdXJyZW50JywgdGVtcGxhdGVDb250cm9sbGVyLmN1cnJlbnRUZW1wbGF0ZSk7XG5cbnJvdXRlci5nZXQoJy9hbGwnLCB2YWxpZGF0ZVRva2VuLCB2YWxpZGF0ZUFkbWluLCB0ZW1wbGF0ZUNvbnRyb2xsZXIuZ2V0QWxsVGVtcGxhdGVzKTtcblxucm91dGVyLmdldChcbiAgJy9nZXQvOmlkJyxcbiAgdmFsaWRhdGVUb2tlbixcbiAgdmFsaWRhdGVBZG1pbixcbiAgVmFsaWRhdGVKb2lQYXJhbShQYXJhbXNTY2hlbWEuY29tbW9uKSxcbiAgdGVtcGxhdGVDb250cm9sbGVyLmdldFRlbXBsYXRlXG4pO1xuXG5yb3V0ZXIucG9zdChcbiAgJy9jcmVhdGUnLFxuICB2YWxpZGF0ZVRva2VuLFxuICB2YWxpZGF0ZUFkbWluLFxuICBWYWxpZGF0ZUpvaShUZW1wbGF0ZVNjaGVtYS5jcmVhdGUpLFxuICB0ZW1wbGF0ZUNvbnRyb2xsZXIuY3JlYXRlVGVtcGxhdGVcbik7XG5cbnJvdXRlci5wYXRjaChcbiAgJy91cGRhdGUvOmlkJyxcbiAgdmFsaWRhdGVUb2tlbixcbiAgdmFsaWRhdGVBZG1pbixcbiAgVmFsaWRhdGVKb2lQYXJhbShQYXJhbXNTY2hlbWEuY29tbW9uKSxcbiAgVmFsaWRhdGVKb2koVGVtcGxhdGVTY2hlbWEudXBkYXRlKSxcbiAgdGVtcGxhdGVDb250cm9sbGVyLnVwZGF0ZVRlbXBsYXRlXG4pO1xuXG5yb3V0ZXIucG9zdChcbiAgJy9hY3RpdmUvOmlkJyxcbiAgdmFsaWRhdGVUb2tlbixcbiAgdmFsaWRhdGVBZG1pbixcbiAgVmFsaWRhdGVKb2lQYXJhbShQYXJhbXNTY2hlbWEuY29tbW9uKSxcbiAgdGVtcGxhdGVDb250cm9sbGVyLmFjdGl2ZVRlbXBsYXRlXG4pO1xuXG5yb3V0ZXIuZGVsZXRlKFxuICAnL2RlbGV0ZS86aWQnLFxuICB2YWxpZGF0ZVRva2VuLFxuICB2YWxpZGF0ZUFkbWluLFxuICBWYWxpZGF0ZUpvaVBhcmFtKFBhcmFtc1NjaGVtYS5jb21tb24pLFxuICB0ZW1wbGF0ZUNvbnRyb2xsZXIuZGVsZXRlVGVtcGxhdGVcbik7XG5cbmV4cG9ydCBkZWZhdWx0IHJvdXRlcjtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsSUFBQUEsUUFBQSxHQUFBQyxPQUFBO0FBRUEsSUFBQUMsV0FBQSxHQUFBRCxPQUFBO0FBQ0EsSUFBQUUsSUFBQSxHQUFBRixPQUFBO0FBQ0EsSUFBQUcsU0FBQSxHQUFBSCxPQUFBO0FBQ0EsSUFBQUksa0JBQUEsR0FBQUosT0FBQTtBQUNBLElBQU1LLE1BQU0sR0FBRyxJQUFBQyxlQUFNLEVBQUMsQ0FBQztBQUV2QkQsTUFBTSxDQUFDRSxHQUFHLENBQUMsVUFBVSxFQUFFQyw4QkFBa0IsQ0FBQ0MsZUFBZSxDQUFDO0FBRTFESixNQUFNLENBQUNFLEdBQUcsQ0FBQyxNQUFNLEVBQUVHLHVCQUFhLEVBQUVDLHVCQUFhLEVBQUVILDhCQUFrQixDQUFDSSxlQUFlLENBQUM7QUFFcEZQLE1BQU0sQ0FBQ0UsR0FBRyxDQUNSLFVBQVUsRUFDVkcsdUJBQWEsRUFDYkMsdUJBQWEsRUFDYixJQUFBRSxxQkFBZ0IsRUFBQ0MsK0JBQVksQ0FBQ0MsTUFBTSxDQUFDLEVBQ3JDUCw4QkFBa0IsQ0FBQ1EsV0FDckIsQ0FBQztBQUVEWCxNQUFNLENBQUNZLElBQUksQ0FDVCxTQUFTLEVBQ1RQLHVCQUFhLEVBQ2JDLHVCQUFhLEVBQ2IsSUFBQU8sZ0JBQVcsRUFBQ0MsaUNBQWMsQ0FBQ0MsTUFBTSxDQUFDLEVBQ2xDWiw4QkFBa0IsQ0FBQ2EsY0FDckIsQ0FBQztBQUVEaEIsTUFBTSxDQUFDaUIsS0FBSyxDQUNWLGFBQWEsRUFDYlosdUJBQWEsRUFDYkMsdUJBQWEsRUFDYixJQUFBRSxxQkFBZ0IsRUFBQ0MsK0JBQVksQ0FBQ0MsTUFBTSxDQUFDLEVBQ3JDLElBQUFHLGdCQUFXLEVBQUNDLGlDQUFjLENBQUNJLE1BQU0sQ0FBQyxFQUNsQ2YsOEJBQWtCLENBQUNnQixjQUNyQixDQUFDO0FBRURuQixNQUFNLENBQUNZLElBQUksQ0FDVCxhQUFhLEVBQ2JQLHVCQUFhLEVBQ2JDLHVCQUFhLEVBQ2IsSUFBQUUscUJBQWdCLEVBQUNDLCtCQUFZLENBQUNDLE1BQU0sQ0FBQyxFQUNyQ1AsOEJBQWtCLENBQUNpQixjQUNyQixDQUFDO0FBRURwQixNQUFNLFVBQU8sQ0FDWCxhQUFhLEVBQ2JLLHVCQUFhLEVBQ2JDLHVCQUFhLEVBQ2IsSUFBQUUscUJBQWdCLEVBQUNDLCtCQUFZLENBQUNDLE1BQU0sQ0FBQyxFQUNyQ1AsOEJBQWtCLENBQUNrQixjQUNyQixDQUFDO0FBQUMsSUFBQUMsUUFBQSxHQUVhdEIsTUFBTTtBQUFBdUIsT0FBQSxjQUFBRCxRQUFBIn0=